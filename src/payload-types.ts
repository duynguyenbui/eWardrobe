/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    users: User;
    media: Media;
    product_categories: ProductCategory;
    product_types: ProductType;
    products: Product;
    materials: Material;
    product_collection: ProductCollection;
    product_variants: ProductVariant;
    currency: Currency;
    prices: Price;
    price_sets: PriceSet;
    customer_address: CustomerAddress;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    product_categories: ProductCategoriesSelect<false> | ProductCategoriesSelect<true>;
    product_types: ProductTypesSelect<false> | ProductTypesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    materials: MaterialsSelect<false> | MaterialsSelect<true>;
    product_collection: ProductCollectionSelect<false> | ProductCollectionSelect<true>;
    product_variants: ProductVariantsSelect<false> | ProductVariantsSelect<true>;
    currency: CurrencySelect<false> | CurrencySelect<true>;
    prices: PricesSelect<false> | PricesSelect<true>;
    price_sets: PriceSetsSelect<false> | PriceSetsSelect<true>;
    customer_address: CustomerAddressSelect<false> | CustomerAddressSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  role: 'super_admin' | 'admin' | 'user';
  customer_address?: (number | null) | CustomerAddress;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer_address".
 */
export interface CustomerAddress {
  id: number;
  address_name: string;
  is_default_shipping?: boolean | null;
  is_default_billing?: boolean | null;
  company?: string | null;
  first_name: string;
  last_name: string;
  address_1: string;
  address_2?: string | null;
  city: string;
  country_code: string;
  province: string;
  postal_code: string;
  phone: string;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_categories".
 */
export interface ProductCategory {
  id: number;
  name?: string | null;
  description?: string | null;
  mpath?: string | null;
  is_active?: boolean | null;
  is_internal?: boolean | null;
  rank?: number | null;
  parent_category?: (number | null) | ProductCategory;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_types".
 */
export interface ProductType {
  id: number;
  value: string;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  name: string;
  description?: string | null;
  textEmbedding?: string | null;
  imgEmbedding?: string | null;
  product_categories: (number | ProductCategory)[];
  product_collection?: (number | null) | ProductCollection;
  materials: (number | Material)[];
  product_type: number | ProductType;
  product_variants?: (number | ProductVariant)[] | null;
  origin_country?: string | null;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  discountable: boolean;
  id_giftcard: boolean;
  images: {
    image: number | Media;
    id?: string | null;
  }[];
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_collection".
 */
export interface ProductCollection {
  id: number;
  title: string;
  desciption?: string | null;
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "materials".
 */
export interface Material {
  id: number;
  material: string;
  description?: string | null;
  image?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_variants".
 */
export interface ProductVariant {
  id: number;
  name: string;
  sku?: number | null;
  barcode?: string | null;
  upc?: string | null;
  prices: (number | Price)[];
  priceId?: string | null;
  stripeId?: string | null;
  weight?: number | null;
  length?: number | null;
  height?: number | null;
  width?: number | null;
  material?: (number | Material)[] | null;
  origin_country?: string | null;
  variant_rank?: number | null;
  product: number | Product;
  images: {
    image: number | Media;
    id?: string | null;
  }[];
  metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "prices".
 */
export interface Price {
  id: number;
  title: string;
  currency_code?: (number | null) | Currency;
  raw_amount?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  priority?: number | null;
  start_date?: string | null;
  end_date?: string | null;
  amount: number;
  min_quantity: number;
  max_quantity: number;
  is_active?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "currency".
 */
export interface Currency {
  id: number;
  code: string;
  symbol: string;
  symbol_native: string;
  decimal_digits: number;
  rounding: number;
  raw_rounding?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  name: string;
  status: 'active' | 'inactive';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "price_sets".
 */
export interface PriceSet {
  id: number;
  title: string;
  prices?: (number | Price)[] | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'product_categories';
        value: number | ProductCategory;
      } | null)
    | ({
        relationTo: 'product_types';
        value: number | ProductType;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'materials';
        value: number | Material;
      } | null)
    | ({
        relationTo: 'product_collection';
        value: number | ProductCollection;
      } | null)
    | ({
        relationTo: 'product_variants';
        value: number | ProductVariant;
      } | null)
    | ({
        relationTo: 'currency';
        value: number | Currency;
      } | null)
    | ({
        relationTo: 'prices';
        value: number | Price;
      } | null)
    | ({
        relationTo: 'price_sets';
        value: number | PriceSet;
      } | null)
    | ({
        relationTo: 'customer_address';
        value: number | CustomerAddress;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  role?: T;
  customer_address?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_categories_select".
 */
export interface ProductCategoriesSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  mpath?: T;
  is_active?: T;
  is_internal?: T;
  rank?: T;
  parent_category?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_types_select".
 */
export interface ProductTypesSelect<T extends boolean = true> {
  value?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  description?: T;
  textEmbedding?: T;
  imgEmbedding?: T;
  product_categories?: T;
  product_collection?: T;
  materials?: T;
  product_type?: T;
  product_variants?: T;
  origin_country?: T;
  metadata?: T;
  discountable?: T;
  id_giftcard?: T;
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "materials_select".
 */
export interface MaterialsSelect<T extends boolean = true> {
  material?: T;
  description?: T;
  image?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_collection_select".
 */
export interface ProductCollectionSelect<T extends boolean = true> {
  title?: T;
  desciption?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_variants_select".
 */
export interface ProductVariantsSelect<T extends boolean = true> {
  name?: T;
  sku?: T;
  barcode?: T;
  upc?: T;
  prices?: T;
  priceId?: T;
  stripeId?: T;
  weight?: T;
  length?: T;
  height?: T;
  width?: T;
  material?: T;
  origin_country?: T;
  variant_rank?: T;
  product?: T;
  images?:
    | T
    | {
        image?: T;
        id?: T;
      };
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "currency_select".
 */
export interface CurrencySelect<T extends boolean = true> {
  code?: T;
  symbol?: T;
  symbol_native?: T;
  decimal_digits?: T;
  rounding?: T;
  raw_rounding?: T;
  name?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "prices_select".
 */
export interface PricesSelect<T extends boolean = true> {
  title?: T;
  currency_code?: T;
  raw_amount?: T;
  priority?: T;
  start_date?: T;
  end_date?: T;
  amount?: T;
  min_quantity?: T;
  max_quantity?: T;
  is_active?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "price_sets_select".
 */
export interface PriceSetsSelect<T extends boolean = true> {
  title?: T;
  prices?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customer_address_select".
 */
export interface CustomerAddressSelect<T extends boolean = true> {
  address_name?: T;
  is_default_shipping?: T;
  is_default_billing?: T;
  company?: T;
  first_name?: T;
  last_name?: T;
  address_1?: T;
  address_2?: T;
  city?: T;
  country_code?: T;
  province?: T;
  postal_code?: T;
  phone?: T;
  metadata?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}